"""
Django settings for miu project.

Generated by 'django-admin startproject' using Django 3.0.9.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os, logging
import json

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

logging.basicConfig(
    level = logging.INFO,
    format = '%(asctime)s %(levelname)s %(message)s',
    filename = os.path.join(BASE_DIR,'djangoLog.log'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'mj5-vbietzu+mwv!m)s!d--8k6fiympp7uj3n9=y#c5-t8cwrz'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['35.154.137.1','65.0.80.16']
SERVERURL="http://localhost"

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'usermanagement',
    'organization',
    'project',
    'operations',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'miu.UserVerification.CheckToken',
]

ROOT_URLCONF = 'miu.urls'

CORS_ORIGIN_ALLOW_ALL = True

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'miu.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

# DATABASES = {
    # 'default': {
        # 'ENGINE': 'django.db.backends.sqlite3',
        # 'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    # }
# }

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'django',
        'USER': 'miuapp',
        'PASSWORD': 'newPassword@123456',
        'HOST': 'localhost',
        'PORT': '5432',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'

MEDIA_ROOT = os.path.join(BASE_DIR,'media_files')
DOWNLOAD_URL_EXPIRY=60 #seconds
OTP_EXPIRY_DURATION = 15 #minutes
LOCKOUT_COUNT_RESET_DURATION = 10 #minutes
INCORRECT_PASSWORD_COUNT_THRESHOLD = 5 #minutes #If wrong password is entered x number of times within these minutes then lockout will be initiated
INCORRECT_PASSWORD_COUNT_MAX_ATTEMPTS = 5 #Should be grater than 1 # If these many number of wrong password attempts are made in x minutes then lockout will be intiated

LOCKOUT_PASSWORD_RESET_INIT_DURATION = 10 #minutes
PASSWORD_RESET_INIT_COUNT_THRESHOLD = 5 #minutes #If wrong password is entered x number of times within these minutes then lockout will be initiated
PASSWORD_RESET_INIT_COUNT_MAX_ATTEMPTS = 5 #Should be grater than 1 # If these many number of wrong password attempts are made in x minutes then lockout will be intiated
FILE_DOWNLOAD_URL_EXPIRY = 60 #secs

CELERY_BROKER_URL = 'amqp://miu:newPassword1233456@localhost'
VERIFICATION_LINK_EXPIRY_DURATION = 30 #mins

FRONT_END_URL = "http://localhost"
STORAGE_THRESHOLD = 50 #MB


TEMPLATE_DIR=os.path.join(BASE_DIR,'templates')

EMAIL = "mmtxtutil@gmail.com"
EMAIL_PASSWORD = "tldsnxsqvlbsofzq"
EMAIL_USERNAME = "Rohit Khandelwal"
EMAIL_IP = "smtp.gmail.com"
ENCRYPTED_ENCRYPTION_KEY = b'ScXL9dqxFMSoIUa4J+2xwjPzyLyQefzwKWDyM38pV7myDLfVz96SOpCmI1cDaI6NVEmY2ZRdgC83HJQM9B2mNulr1rWdRL81v2lwu1ssZ4NF/ytW6yi5hEpqVhX2yzCkwwbKfabIsqPpiNEM8JUI8A=='
CRON_JOB_TIME_LIST = [0, 1, 0, 0] # days, hous, minutes, seconds

# PyMongo setup for Logs
from pymongo import MongoClient

# configFile = json.load(open(os.path.join(BASE_DIR, "configFile.json"), "r"))

client = MongoClient("mongodb://root:sdafasjdkfe323tfd@localhost:{}".format("27017"))
db = client.admin
ACTIVITY_LOGS_DB = db.activity_logs
ERROR_LOGS_DB = db.error_logs

# Decrypt Encryption Key
from .encryptionAES import AESCipher

aesCipher = AESCipher(SECRET_KEY)
ORIGINAL_ENCRYPTION_KEY = aesCipher.decrypt(ENCRYPTED_ENCRYPTION_KEY)
